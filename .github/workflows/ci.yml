# cookflow-frontend/.github/workflows/ci.yml
name: Frontend CI & E2E Tests

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  repository_dispatch:
    types: [backend_update]

jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Frontend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            hemaps/cookflow-frontend:latest
            hemaps/cookflow-frontend:${{ github.sha }}

  e2e-tests:
    runs-on: ubuntu-latest
    needs: build-and-push-frontend
    if: |
      github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') ||
      github.event_name == 'repository_dispatch' && github.event.action == 'backend_update'
    steps:
      - name: Checkout Frontend Code (incl. docker-compose.yml and cypress)
        uses: actions/checkout@v4

      - name: Login to Docker Registry (needed to pull backend image)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Cypress & Start All Services
        run: docker compose up -d --build

      # --- START: Separated Wait Steps ---
      - name: Wait for DB to be healthy
        run: docker compose wait db

      - name: Wait for Backend to be healthy
        run: docker compose wait backend

      - name: Wait for Frontend to be healthy
        run: docker compose wait frontend
      # --- END: Separated Wait Steps ---

      - name: Run Backend Migrations & Seed Data
        run: docker compose run --rm backend sh -c "python manage.py migrate --noinput && python manage.py seed_all"

      - name: Run Cypress E2E Tests (Headless)
        run: docker compose run --rm --entrypoint "" cypress sh -c "cd /e2e && npx cypress run --project ./"
        env:
          CYPRESS_BASE_URL: http://frontend:80
          CYPRESS_API_URL: http://backend:8000/api

      - name: Clean up Docker Compose
        if: always()
        run: docker compose down